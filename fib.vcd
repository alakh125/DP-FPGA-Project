$date
	Tue Dec  1 02:11:34 2020
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module tb_fibonacci $end
$var wire 1 ! valid $end
$var wire 32 " fib [31:0] $end
$var reg 1 # clk $end
$var reg 32 $ n [31:0] $end
$var reg 1 % start $end
$scope module f $end
$var wire 1 # clk $end
$var wire 32 & fib [31:0] $end
$var wire 32 ' n [31:0] $end
$var wire 1 % start $end
$var wire 1 ! valid $end
$var reg 32 ( f0 [31:0] $end
$var reg 32 ) f1 [31:0] $end
$var reg 32 * fn [31:0] $end
$var reg 32 + n_count [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b1 +
bx *
b1 )
b0 (
b1010 '
bx &
0%
b1010 $
0#
bx "
0!
$end
#100
b10 +
b1 "
b1 &
b1 *
1%
1#
#200
b1 (
0#
#300
b11 +
b10 "
b10 &
b10 *
1#
#400
b10 )
0#
#500
b100 +
b11 "
b11 &
b11 *
1#
#600
b11 )
b10 (
0#
#700
b101 +
b101 "
b101 &
b101 *
1#
#800
b11 (
b101 )
0#
#900
b110 +
b1000 "
b1000 &
b1000 *
1#
#1000
b1000 )
b101 (
0#
#1100
b111 +
b1101 "
b1101 &
b1101 *
1#
#1200
b1000 (
b1101 )
0#
#1300
b1000 +
b10101 "
b10101 &
b10101 *
1#
#1400
b10101 )
b1101 (
0#
#1500
b1001 +
b100010 "
b100010 &
b100010 *
1#
#1600
b10101 (
b100010 )
0#
#1700
1!
b1010 +
b110111 "
b110111 &
b110111 *
1#
#1800
0#
#1900
1#
#2000
0#
#2100
1#
#2200
0#
#2300
1#
#2400
0#
#2500
1#
#2600
0#
#2700
1#
#2800
0#
#2900
1#
#3000
0#
#3100
1#
#3200
0#
#3300
1#
#3400
0#
#3500
1#
#3600
0#
#3700
1#
#3800
0#
#3900
1#
#4000
0#
#4100
1#
#4200
0#
#4300
1#
#4400
0#
#4500
1#
#4600
0#
#4700
1#
#4800
0#
#4900
1#
#5000
0#
#5100
1#
